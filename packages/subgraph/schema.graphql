
type Coin @entity {
  id: ID! # Contract address
  symbol: String!
  name: String!
  creator: Bytes!
  poolAddress: Bytes
  createdAt: BigInt!
  createdAtBlock: BigInt!
  poolStat: PoolStat
}

type PoolStat @entity {
  id: ID! # Pool address
  coin: Coin!
  volume24h: BigDecimal!
  depth: BigDecimal! # Total liquidity depth
  feeAPR: BigDecimal!
  totalVolumeUSD: BigDecimal!
  totalRoyalties: BigDecimal!
  lastUpdated: BigInt!
  lastUpdatedBlock: BigInt!
}

type RoyaltyFlow @entity {
  id: ID! # tx hash + log index
  coin: Coin!
  pool: PoolStat!
  payer: Bytes!
  amount: BigDecimal!
  blockTime: BigInt!
  blockNumber: BigInt!
  transactionHash: Bytes!
}

type LPPosition @entity {
  id: ID! # pool address + owner address
  pool: PoolStat!
  owner: Bytes!
  liquidity: BigDecimal!
  unclaimed: BigDecimal!
  createdAt: BigInt!
  lastModified: BigInt!
}

type SwapEvent @entity {
  id: ID! # tx hash + log index
  pool: PoolStat!
  sender: Bytes!
  recipient: Bytes!
  amount0: BigDecimal!
  amount1: BigDecimal!
  sqrtPriceX96: BigInt!
  liquidity: BigInt!
  tick: Int!
  blockTime: BigInt!
  blockNumber: BigInt!
  transactionHash: Bytes!
}

# Daily aggregated stats
type DailyPoolStat @entity {
  id: ID! # pool address + date
  pool: PoolStat!
  date: Int! # Unix timestamp (start of day)
  volumeUSD: BigDecimal!
  royaltiesUSD: BigDecimal!
  swapCount: BigInt!
  uniqueUsers: BigInt!
}
